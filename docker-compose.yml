# The version of the docker-compose.
version: "3.8"
# Telling docker-compose to build the client and server images and run them in containers.
services:
  client:
    # Telling docker-compose to build the client image using the Dockerfile in the client directory.
    build: ./client
    # Giving the container a name.
    container_name: clientapp_c
    # Mapping the port 3000 on the host machine to the port 3000 on the container.
    ports:
      - "3000:3000"
    # Mapping the client directory on the host machine to the /app directory on the container.
    volumes:
      - ./client:/app
      - ./app/node_modules
    # Allows you to run container in detached mode.
    stdin_open: true
    tty: true
  server:
    # Telling docker-compose to build the client image using the Dockerfile in the server directory.
    build: ./server
    container_name: serverapp_c
    ports:
      - "5000:5000"
    volumes:
      - ./server:/app
      - ./app/node_modules


# version: '3.8'

# # Services
# services:
#   # Server service
#   server:
#     build:
#       context: ./server
#       dockerfile: Dockerfile
#     container_name: backend
#     ports:
#       - "5000:5000"
#     env_file: ./.env
#     environment:
#       - DB_HOST=mongodb_server
#       - DB_USER=$MONGODB_USER
#       - DB_PASSWORD=$MONGODB_PASSWORD
#       - DB_NAME=$MONGODB_DATABASE
#       - DB_PORT=$MONGODB_DOCKER_PORT
#     depends_on:
#       - mongodb

#   # Client service
#   client:
#     build:
#       context: ./client
#       dockerfile: Dockerfile

#     container_name: frontend
#     ports:
#       - "80:80"
#     depends_on:
#       - server

#   # Database service
#   mongodb:
#     image: mongo:latest
#     container_name: mongodb_server

#     env_file: ./.env
#     environment:
#       - MONGO_INITDB_ROOT_USERNAME=$MONGODB_USER
#       - MONGO_INITDB_ROOT_PASSWORD=$MONGODB_PASSWORD

#     ports:
#       - "27017:27017"

#     volumes:
#       - ./../mydata:/data/db

# # Volumes define
# volumes: 
#   mydata: